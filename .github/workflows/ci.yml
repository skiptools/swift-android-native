name: swift-android-native ci
on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:
    branches:
      - '*'
  schedule:
    - cron:  '45 2,13 * * *'
jobs:
  linux-android:
    strategy:
      fail-fast: false
      matrix:
        swift: ['6.1', '6.2']
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: "Test Swift Package on Linux"
        run: swift test
      - name: "Test Swift Package on Android"
        uses: skiptools/swift-android-action@v2
        with:
          swift-version: ${{ matrix.swift }}

  macos-ios:
    strategy:
      fail-fast: false
      matrix:
        - os: 'macos-26'
          swift: '6.2'
          arch: 'arm64-v8a'
        - os: 'macos-13'
          swift: '6.1'
          arch: 'x86_64'
        - os: 'macos-13'
          swift: '6.2'
          arch: 'x86_64'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - name: "Build Swift Package for Android (Skip)"
        run: |
          brew install skiptools/skip/skip || (brew update && brew install skiptools/skip/skip)
          skip android sdk install --verbose --version ${{ matrix.swift }}
          # https://github.com/swiftlang/swift-driver/pull/1879
          ANDROID_NDK_ROOT="" skip android build --build-tests
      - name: "Test Swift Package on Android (Skip)"
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 28
          arch: ${{ matrix.arch }}
          script: ANDROID_NDK_ROOT="" skip android test --verbose
      - name: "Test Swift Package on macOS"
        run: swift test
      - name: "Test Swift Package on iOS"
        run: xcodebuild test -sdk "iphonesimulator" -destination "platform=iOS Simulator,name=iPhone 15" -scheme "$(xcodebuild -list -json | jq -r '.workspace.schemes[-1]')"

